definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  request.LoginRequest:
    properties:
      captcha:
        type: string
      captcha_id:
        type: string
      password:
        type: string
      user_name:
        type: string
    required:
    - captcha
    - captcha_id
    - password
    - user_name
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  system.SysRole:
    properties:
      children:
        items:
          $ref: '#/definitions/system.SysRole'
        type: array
      create_time:
        type: string
      delete_time:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      parent_id:
        description: 父角色ID
        type: string
      role_name:
        description: 角色名
        type: string
      update_time:
        type: string
    type: object
  system.SysUser:
    properties:
      avatar:
        type: string
      create_time:
        type: string
      delete_time:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: string
      nick_name:
        type: string
      password:
        type: string
      phone:
        type: string
      roles:
        description: 关联到角色表
        items:
          $ref: '#/definitions/system.SysRole'
        type: array
      update_time:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /file/delete/{id}:
    delete:
      parameters:
      - description: 参数
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{""code"":200,""message"":""删除成功""}'
          schema:
            type: string
        "400":
          description: '{""code"":400,""message"":""删除失败""}'
          schema:
            type: string
        "500":
          description: '{""code"":500,""message"":""服务器错误""}'
          schema:
            type: string
      summary: 文件删除
      tags:
      - file
  /file/list:
    get:
      parameters:
      - description: 关键字
        in: query
        name: key_word
        type: string
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{""code"":200,""message"":""删除成功""}'
          schema:
            type: string
        "400":
          description: '{""code"":400,""message"":""删除失败""}'
          schema:
            type: string
        "500":
          description: '{""code"":500,""message"":""服务器错误""}'
          schema:
            type: string
      summary: 文件列表
      tags:
      - file
  /file/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{""code"":200,""message"":""上传成功""}'
          schema:
            type: string
        "400":
          description: '{""code"":400,""message"":""上传失败""}'
          schema:
            type: string
        "500":
          description: '{""code"":500,""message"":""服务器错误""}'
          schema:
            type: string
      summary: 文件上传
      tags:
      - file
  /public/base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/system.SysUser'
                msg:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - User
  /public/base/register:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/system.SysUser'
                msg:
                  type: string
              type: object
      summary: 用户注册
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
